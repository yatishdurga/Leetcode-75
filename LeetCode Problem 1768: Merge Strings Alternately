
https://youtu.be/LECWOvTo-Sc?si=LAHRXkBDIi-cwvgd
"""
LeetCode Problem 1768: Merge Strings Alternately
------------------------------------------------

📝 Description:
You are given two strings word1 and word2. Merge the strings by adding letters in 
alternating order, starting with word1. If a string is longer than the other, 
append the additional letters onto the end of the merged string.

Return the merged string.

📚 Examples:
-----------
Example 1:
Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: 
    word1:  a   b   c
    word2:    p   q   r
    merged: a p b q c r

Example 2:
Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: 
    word1:  a   b 
    word2:    p   q   r   s
    merged: a p b q   r   s

Example 3:
Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: 
    word1:  a   b   c   d
    word2:    p   q 
    merged: a p b q c   d

🔒 Constraints:
- 1 <= word1.length, word2.length <= 100
- word1 and word2 consist of lowercase English letters.
"""

class Solution:
    def mergeAlternately(self, word1: str, word2: str) -> str:
        i, j = 0, 0
        res = []

        while i < len(word1) and j < len(word2):
            res.append(word1[i])
            res.append(word2[j])
            i += 1
            j += 1

        # Add remaining characters from either string
        res.extend(word1[i:])
        res.extend(word2[j:])

        return ''.join(res)

